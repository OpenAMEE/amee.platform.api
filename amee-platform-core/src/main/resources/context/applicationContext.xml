<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="searchSystemEnvironment" value="true"/>
        <property name="location" value="amee.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <context:component-scan base-package="com"/>

    <tx:annotation-driven/>

    <!-- Enable @AspectJ Support -->
    <aop:aspectj-autoproxy/>

    <!-- Inject the JPA EntityManager into DAOs using @PersistenceContext -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!-- Translate persistence exceptions into Spring data exceptions -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>

    <!-- An aspect to support the perf4j @Profiled annotation.  -->
    <bean id="timingAspect" class="org.perf4j.slf4j.aop.TimingAspect"/>

    <!-- jpaDialect -->
    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>

    <!-- entityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="amee"/>
        <property name="dataSource" ref="ameeDataSource"/>
        <property name="jpaVendorAdapter" ref="jpaVendorAdaptor"/>
        <property name="packagesToScan" value="com.amee"/>

        <!-- Specify hibernate specific stuff in here instead of in persistence.xml -->
        <property name="jpaPropertyMap">
            <props>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">create</prop>-->
            </props>
        </property>
    </bean>

    <!-- JPA Vendor Adaptor -->
    <bean id="jpaVendorAdaptor" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="${DATABASE}"/>
        <property name="databasePlatform" value="${DATABASE_PLATFORM}"/>
        <property name="showSql" value="${SHOW_SQL}"/>
    </bean>

    <!-- transactionManager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>

        <!-- Allow transactions on simple JDBC operations on the same DataSource -->
        <property name="jpaDialect" ref="jpaDialect"/>

        <!--<property name="transactionSynchronization">-->
            <!--<bean id="org.springframework.transaction.jta.JtaTransactionManager.SYNCHRONIZATION_ON_ACTUAL_TRANSACTION"-->
                  <!--class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean"/>-->
        <!--</property>-->
    </bean>

    <!-- TransactionController Implementation. -->
    <bean id="transactionController" class="com.amee.persist.TransactionControllerImpl"/>

    <!-- EhCacheManagerFactoryBean -->
    <!--<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
        <!--<property name="configLocation" value="classpath:ehcache.xml"/>-->
        <!--<property name="shared" value="true"/>-->
    <!--</bean>-->

    <!-- CacheService -->
    <bean id="cacheService" class="com.amee.base.cache.EhCacheCacheService"/>

    <!-- Messages for validation -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/validationMessages"/>
        <property name="cacheSeconds" value="60"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <!-- AMEE Services -->

    <!-- DataSheetService -->
    <!-- The eternalPaths below should be kept in sync with those in /bin/warm-up-eternal-categories.sh -->
    <bean id="dataSheetService" class="com.amee.service.data.DataSheetServiceImpl">
        <property name="eternalPaths">
            <set>
                <!--<value>/home/heating</value>-->
                <!--<value>/home/heating/us</value>-->
                <!--<value>/transport/plane/generic/airports/all/countries</value>-->
                <!--<value>/transport/car/specific</value>-->
                <!--<value>/transport/car/specific/us</value>-->
                <!--<value>/transport/car/specific/uk</value>-->
                <!--<value>/transport/plane/generic/airports/all/codes</value>-->
                <!--<value>/business/energy/stationaryCombustion</value>-->
            </set>
        </property>
    </bean>

    <!-- A service only used in V3 for managing values in ThreadLocals. -->
    <bean id="transactionThreadBeanManager" class="com.amee.service.TransactionThreadBeanManager"/>

    <!-- A functional implementation of LocaleServiceDAO. -->
    <!--<bean id="localeServiceDAO" class="com.amee.service.locale.LocaleServiceDAOImpl"/>-->

    <!-- A no-op implementation of LocaleServiceDAO. -->
    <bean id="localeServiceDAO" class="com.amee.service.locale.LocaleServiceDAONoOpImpl"/>

    <!-- Drill Down service is lucene backed in v3 -->
    <bean id="drillDownService" class="com.amee.platform.search.LuceneDrillDownService"/>

</beans>